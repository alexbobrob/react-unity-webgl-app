"use strict";
exports.__esModule = true;
var UnityVersion_1 = require("./enums/UnityVersion");
var UnityContent = /** @class */ (function () {
    /**
     * Creates a new Unity content object. This object can be used
     * @param {string} buildJsonPath the relative path to the build json file generated by Unity.
     * @param {string} unityLoaderJsPath the relative path to the unity loader javascript file.
     * @param {IUnityConfig} unityConfig the Unity configuration that will be used to start the player.
     */
    function UnityContent(buildJsonPath, unityLoaderJsPath, unityConfig) {
        this.buildJsonPath = buildJsonPath;
        this.unityLoaderJsPath = unityLoaderJsPath;
        var _unityConfig = typeof unityConfig === "undefined" ? {} : unityConfig;
        this.unityConfig = {
            isFullscreen: _unityConfig.isFullscreen || false,
            modules: _unityConfig.modules || {},
            unityVersion: UnityVersion_1.UnityVersion.UNITY_2018
        };
    }
    /**
     * Binds a unity component to this content.
     * @param unityComponentInstance the unity component that will be binded to this content.
     */
    UnityContent.prototype.setComponentInstance = function (unityComponentInstance) {
        this.unityComponentInstance = unityComponentInstance;
    };
    /**
     * Binds a unity player to this content.
     * @param unityPlayerInstance the unity component that will be binded to this content.
     */
    UnityContent.prototype.setUnityPlayerInstance = function (unityPlayerInstance) {
        this.unityPlayerInstance = unityPlayerInstance;
    };
    /**
     * Sends an event to the Unity player that will trigger a function.
     * @param {string} gameObjectName the name of the game object in your Unity scene.
     * @param {string} methodName the name of the public method on the game object.
     * @param {any} parameter an optional parameter to pass along to the method.
     */
    UnityContent.prototype.send = function (gameObjectName, methodName, parameter) {
        console.log("Sending " + gameObjectName + " " + methodName + " " + parameter);
        // this.unityPlayerInstance.sendMessage(gameObjectName, methodName); // TODO
    };
    return UnityContent;
}());
exports["default"] = UnityContent;
//# sourceMappingURL=UnityContent.js.map